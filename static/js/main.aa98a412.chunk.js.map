{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","props","name","email","className","alt","src","CardList","robots","map","user","index","key","id","SearchBox","onSearchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"0OAgBeA,EAbF,SAACC,GAAW,IACbC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACjB,OACC,yBAAKC,UAAU,uDACL,yBAAKC,IAAI,SAASC,IAAG,+BAA0BJ,EAA1B,cAC9B,6BACa,4BAAKA,GACL,2BAAIC,EAAJ,QCwBDI,EA/BE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAenB,OACC,6BACEA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACC,kBAAC,EAAD,CACCC,IAAKD,EACLE,GAAIL,EAAOG,GAAOE,GAClBX,KAAMM,EAAOG,GAAOT,KACpBC,MAAOK,EAAOG,GAAOR,aChBZW,EARG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eACnB,OACC,yBAAKX,UAAU,OACL,2BAAOA,UAAU,mCAAoCY,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,MCKtGI,G,MARA,SAAClB,GACZ,OACI,yBAAKmB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UACjEtB,EAAMuB,YCqBJC,E,kDAtBX,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IACDyB,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAMC,GACpBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACJ,iDAGAG,KAAK7B,MAAMuB,a,GAlBHQ,aCqEZC,E,kDAxDd,WAAYhC,GAAQ,IAAD,8BAClB,cAAMA,IAoBPc,eAAiB,SAACmB,GACjB,EAAKH,SAAS,CACbI,YAAaD,EAAME,OAAOC,SArB3B,EAAKX,MAAQ,CACZlB,OAAQ,GACR2B,YAAa,IAJI,E,gEAQE,IAAD,OAQnBG,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKX,SAAS,CAAEvB,OAAQkC,S,+BAejC,IAAD,EACwBZ,KAAKJ,MAA7BlB,EADA,EACAA,OAAQ2B,EADR,EACQA,YACVQ,EAAiBnC,EAAOoC,QAAO,SAACC,GACrC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASZ,EAAYW,kBAGtD,OAAQtC,EAAOwC,OAGd,yBAAK5C,UAAU,MACd,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWW,eAAgBe,KAAKf,iBAEhC,kBAAC,EAAD,KACC,kBAAC,EAAD,KACC,kBAAC,EAAD,CAAUP,OAAQmC,OARrB,8C,GAzCeX,aCJlBiB,IAASC,OACR,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.aa98a412.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// const Card = ({name, email, id}) => {\r\nconst Card = (props) => {\r\n    const { name, email } = props;\r\n\treturn (\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" src={`https://robohash.org/${name}?200x200`} />\r\n\t\t\t<div>\r\n                <h2>{name}</h2>\r\n                <p>{email} </p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../components/Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\t// if (true) {\r\n\t// \tthrow new Error('Nooo!');\r\n\t// }\r\n\t// const cardsArray = robots.map((user, index) => {\r\n\t// \treturn (\r\n\t// \t\t<Card\r\n\t// \t\t\tkey={index}\r\n\t// \t\t\tid={robots[index].id}\r\n\t// \t\t\tname={robots[index].name}\r\n\t// \t\t\temail={robots[index].email}\r\n\t// \t\t/>\r\n\t// \t);\r\n\t// });\r\n\t// return <div>{cardsArray}</div>;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{robots.map((user, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tid={robots[index].id}\r\n\t\t\t\t\t\tname={robots[index].name}\r\n\t\t\t\t\t\temail={robots[index].email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({onSearchChange}) => {\r\n\treturn (\r\n\t\t<div className=\"pa2\">\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\"  type=\"search\" placeholder=\"search robots\" onChange={onSearchChange} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false,\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info) {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooops not good !!</h1>\r\n        }\r\n        else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\n// import { robots } from './robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n// import { ReactComponent } from '*.svg';\r\n\r\n// state - object >> props\r\n// props -things that come out of state\r\n\r\n// if we need to use state  - we need to have class\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: '',\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// fetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t// \t.then(response => {\r\n\t\t// \t\treturn response.json();\r\n\t\t// \t})\r\n\t\t// \t.then(users => {\r\n\t\t// \t\tthis.setState({ robots: users });\r\n\t\t// \t});\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((users) => this.setState({ robots: users }));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tsearchfield: event.target.value,\r\n\t\t});\r\n\t\t// console.log(event.target.value);\r\n\t\t// const filteredRobots = this.state.robots.filter((robots) => {\r\n\t\t// \treturn robots.name\r\n\t\t// \t\t.toLowerCase()\r\n\t\t// \t\t.includes(this.state.searchfield.toLowerCase());\r\n\t\t// });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter((robot) => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t});\r\n\t\t//\t Conditional rendering\r\n\t\treturn !robots.length ? (\r\n\t\t\t<h1>Loading...</h1>\r\n\t\t) : (\r\n\t\t\t<div className=\"tc\">\r\n\t\t\t\t<h1 className=\"f1\">RoboFriends</h1>\r\n\t\t\t\t<SearchBox onSearchChange={this.onSearchChange} />\r\n\t\t\t\t{/* <CardList robots={this.state.robots} /> */}\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Card from './Card';\n// import * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n// import { robots } from './robots';\n// import CardList from './CardList';\nimport App from './containers/App';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}